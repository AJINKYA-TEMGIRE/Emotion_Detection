name: CI-Pipeline

on: push

jobs:
  project-testing:
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
         python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: requirements.txt
        run: |
         pip install -r requirements.txt

      - name: Run pipeline
        env:
         CI: ${{ secrets.CI }}
        run: |
         dvc repro

      - name: Run model tests
        env:
          CI: ${{ secrets.CI }}
        run: |
          python -m unittest tests/test_model.py
      
      - name: Promote model to production
        if: success()
        env:
          CI: ${{ secrets.CI }}
        run: python scripts/promote_model.py

      - name: Run Flask app tests
        if: success()
        env:
          CI: ${{ secrets.CI }}
        run: python -m unittest tests/test_flask_app.py
      
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/emotion_detection:latest .

      - name: Push Docker image to Docker Hub
        if: success()
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/emotion_detection:latest